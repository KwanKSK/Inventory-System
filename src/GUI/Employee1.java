package GUI;

import Core.*;
import DAO.*;
import java.util.*;
import javax.swing.*;
import TableModel.*;
import javax.swing.table.*;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author witoo
 */
public class Employee1 extends javax.swing.JFrame {
    private String branch_name;
    private StockDAO stockDAO;
    private SaleDAO saleDAO;
    private ImportDAO importDAO;
    private OrderDAO orderDAO;
    
    /**
     * Creates new form Employee1
     */
    public Employee1(){
        initComponents();
    }
    
    public Employee1(String EmployeeBranchName) {
        this();
        try {
            this.branch_name = EmployeeBranchName;
            stockDAO = new StockDAO();
            saleDAO = new SaleDAO();
            importDAO = new ImportDAO();
            orderDAO = new OrderDAO();
            
            // Set the width of each column and populate the table
            List<Stock> stock_list = stockDAO.getAllStocks(branch_name);
            StockTableModel stock_model = new StockTableModel(stock_list);
            
            Product_Search_Table.setModel(stock_model);
            TableColumnModel Product_Search_columnModel = Product_Search_Table.getColumnModel();
            Product_Search_columnModel.getColumn(0).setPreferredWidth(20);
            Product_Search_columnModel.getColumn(1).setPreferredWidth(250);
            Product_Search_columnModel.getColumn(2).setPreferredWidth(20);
            
            Product_Sales_Table.setModel(stock_model);
            TableColumnModel Product_Sales_columnModel = Product_Sales_Table.getColumnModel();
            Product_Sales_columnModel.getColumn(0).setPreferredWidth(20);
            Product_Sales_columnModel.getColumn(1).setPreferredWidth(250);
            Product_Sales_columnModel.getColumn(2).setPreferredWidth(20);
            
            
            List<Orders> orders_list = orderDAO.getAllOrdersOfBranch(branch_name, false);
            EmployeeManagerOrderTableModel orders_model = new EmployeeManagerOrderTableModel(orders_list);
            
            Product_Import_Table.setModel(orders_model);
            TableColumnModel Product_Import_columnModel = Product_Import_Table.getColumnModel();
            Product_Import_columnModel.getColumn(0).setPreferredWidth(10);
            Product_Import_columnModel.getColumn(1).setPreferredWidth(80);
            Product_Import_columnModel.getColumn(2).setPreferredWidth(45);
            Product_Import_columnModel.getColumn(3).setPreferredWidth(80);
            Product_Import_columnModel.getColumn(4).setPreferredWidth(80);
            Product_Import_columnModel.getColumn(5).setPreferredWidth(20);
          
        } catch (Exception exc) {
            JOptionPane.showMessageDialog(this, "Error: " + exc, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Button_Panel = new javax.swing.JPanel();
        Product_Button = new javax.swing.JButton();
        Records_Button = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Logout = new javax.swing.JButton();
        Tabbed_Panel = new javax.swing.JTabbedPane();
        Search_Tab_Panel = new javax.swing.JPanel();
        kGradientPanel3 = new keeptoo.KGradientPanel();
        jLabel7 = new javax.swing.JLabel();
        Product_Name_Search_TextField = new javax.swing.JTextField();
        SearchProduct_Button = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Product_Search_Table = new javax.swing.JTable();
        Records_Tab = new javax.swing.JPanel();
        kGradientPanel4 = new keeptoo.KGradientPanel();
        Records_Tab_Panel = new javax.swing.JTabbedPane();
        Product_Sales_Tab = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        Product_Name_Sales_TextField = new javax.swing.JTextField();
        SearchSale_Button = new javax.swing.JButton();
        RecordSale_Button = new javax.swing.JButton();
        Product_Amount_Sales_TextField = new javax.swing.JTextField();
        Product_Sales_ScrollPane = new javax.swing.JScrollPane();
        Product_Sales_Table = new javax.swing.JTable();
        Product_Import_Tab = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        Product_Name_Import_TexrField = new javax.swing.JTextField();
        SearchImport_Button = new javax.swing.JButton();
        RecordReceivedAmount_Button = new javax.swing.JButton();
        Received_Amount_Import_TextField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        Product_Import_Table = new javax.swing.JTable();
        jLabel22 = new javax.swing.JLabel();
        kGradientPanel1 = new keeptoo.KGradientPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Welcome Employee");
        setBackground(new java.awt.Color(102, 153, 255));
        setForeground(java.awt.Color.blue);
        setSize(new java.awt.Dimension(0, 0));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Button_Panel.setBackground(new java.awt.Color(88, 171, 255));
        Button_Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 5));
        Button_Panel.setOpaque(false);
        Button_Panel.setPreferredSize(new java.awt.Dimension(180, 570));

        Product_Button.setBackground(new java.awt.Color(88, 171, 255));
        Product_Button.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Product_Button.setForeground(new java.awt.Color(255, 255, 255));
        Product_Button.setText("Product");
        Product_Button.setToolTipText("");
        Product_Button.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.darkGray));
        Product_Button.setContentAreaFilled(false);
        Product_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Product_ButtonActionPerformed(evt);
            }
        });

        Records_Button.setBackground(new java.awt.Color(88, 171, 255));
        Records_Button.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Records_Button.setForeground(new java.awt.Color(255, 255, 255));
        Records_Button.setText("Records");
        Records_Button.setToolTipText("");
        Records_Button.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.darkGray));
        Records_Button.setContentAreaFilled(false);
        Records_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Records_ButtonActionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Consolas", 3, 24)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("System");

        jLabel1.setFont(new java.awt.Font("Consolas", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Stocking ");

        Logout.setBackground(new java.awt.Color(88, 171, 255));
        Logout.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Logout.setForeground(new java.awt.Color(255, 255, 255));
        Logout.setText("Log out");
        Logout.setToolTipText("");
        Logout.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.darkGray));
        Logout.setContentAreaFilled(false);
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Button_PanelLayout = new javax.swing.GroupLayout(Button_Panel);
        Button_Panel.setLayout(Button_PanelLayout);
        Button_PanelLayout.setHorizontalGroup(
            Button_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Button_PanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(Button_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Logout, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Button_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(Product_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Records_Button, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Button_PanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Button_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Button_PanelLayout.createSequentialGroup()
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Button_PanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(41, 41, 41))))
        );
        Button_PanelLayout.setVerticalGroup(
            Button_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Button_PanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Product_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Records_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 292, Short.MAX_VALUE)
                .addComponent(Logout, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        getContentPane().add(Button_Panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        Tabbed_Panel.setToolTipText("");

        Search_Tab_Panel.setBackground(new java.awt.Color(88, 171, 255));
        Search_Tab_Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 5));

        kGradientPanel3.setkGradientFocus(-375);
        kGradientPanel3.setkStartColor(new java.awt.Color(88, 189, 255));

        jLabel7.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel7.setText("Product name");

        Product_Name_Search_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Product_Name_Search_TextFieldActionPerformed(evt);
            }
        });

        SearchProduct_Button.setBackground(new java.awt.Color(255, 255, 255));
        SearchProduct_Button.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        SearchProduct_Button.setText("Search");
        SearchProduct_Button.setToolTipText("");
        SearchProduct_Button.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        SearchProduct_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchProduct_ButtonActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Serif", 1, 35)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Product");
        jLabel3.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));

        Product_Search_Table.setAutoCreateRowSorter(true);
        Product_Search_Table.setBackground(new java.awt.Color(51, 51, 51));
        Product_Search_Table.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Product_Search_Table.setForeground(new java.awt.Color(255, 255, 255));
        Product_Search_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Product ID", "Product Name", "Amount (Piece)"
            }
        ));
        Product_Search_Table.setOpaque(false);
        Product_Search_Table.setPreferredSize(new java.awt.Dimension(225, 500));
        Product_Search_Table.setRowHeight(22);
        jScrollPane1.setViewportView(Product_Search_Table);

        javax.swing.GroupLayout kGradientPanel3Layout = new javax.swing.GroupLayout(kGradientPanel3);
        kGradientPanel3.setLayout(kGradientPanel3Layout);
        kGradientPanel3Layout.setHorizontalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 655, Short.MAX_VALUE)
            .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kGradientPanel3Layout.createSequentialGroup()
                    .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(kGradientPanel3Layout.createSequentialGroup()
                            .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(kGradientPanel3Layout.createSequentialGroup()
                                    .addGap(251, 251, 251)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(kGradientPanel3Layout.createSequentialGroup()
                                    .addGap(97, 97, 97)
                                    .addComponent(jLabel7)
                                    .addGap(18, 18, 18)
                                    .addComponent(Product_Name_Search_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(28, 28, 28)
                                    .addComponent(SearchProduct_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(0, 106, Short.MAX_VALUE))
                        .addGroup(kGradientPanel3Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 631, Short.MAX_VALUE)))
                    .addContainerGap()))
        );
        kGradientPanel3Layout.setVerticalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 559, Short.MAX_VALUE)
            .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kGradientPanel3Layout.createSequentialGroup()
                    .addGap(34, 34, 34)
                    .addComponent(jLabel3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Product_Name_Search_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SearchProduct_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(35, 35, 35)))
        );

        javax.swing.GroupLayout Search_Tab_PanelLayout = new javax.swing.GroupLayout(Search_Tab_Panel);
        Search_Tab_Panel.setLayout(Search_Tab_PanelLayout);
        Search_Tab_PanelLayout.setHorizontalGroup(
            Search_Tab_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        Search_Tab_PanelLayout.setVerticalGroup(
            Search_Tab_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Search_Tab_PanelLayout.createSequentialGroup()
                .addComponent(kGradientPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Tabbed_Panel.addTab("View", Search_Tab_Panel);

        Records_Tab.setBackground(new java.awt.Color(88, 171, 255));
        Records_Tab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 5));

        kGradientPanel4.setkGradientFocus(-375);
        kGradientPanel4.setkStartColor(new java.awt.Color(88, 189, 255));

        Product_Sales_Tab.setBackground(new java.awt.Color(255, 255, 255));

        jLabel20.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel20.setText("Sold Amount");

        jLabel15.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel15.setText("Product name");

        Product_Name_Sales_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Product_Name_Sales_TextFieldActionPerformed(evt);
            }
        });

        SearchSale_Button.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        SearchSale_Button.setText("Search");
        SearchSale_Button.setToolTipText("");
        SearchSale_Button.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        SearchSale_Button.setContentAreaFilled(false);
        SearchSale_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchSale_ButtonActionPerformed(evt);
            }
        });

        RecordSale_Button.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        RecordSale_Button.setText("Record");
        RecordSale_Button.setToolTipText("");
        RecordSale_Button.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        RecordSale_Button.setContentAreaFilled(false);
        RecordSale_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecordSale_ButtonActionPerformed(evt);
            }
        });

        Product_Amount_Sales_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Product_Amount_Sales_TextFieldActionPerformed(evt);
            }
        });

        Product_Sales_Table.setBackground(new java.awt.Color(51, 51, 51));
        Product_Sales_Table.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Product_Sales_Table.setForeground(new java.awt.Color(255, 255, 255));
        Product_Sales_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Product ID", "Product Name", "Amount (Piece)"
            }
        ));
        Product_Sales_Table.setRowHeight(22);
        Product_Sales_ScrollPane.setViewportView(Product_Sales_Table);

        javax.swing.GroupLayout Product_Sales_TabLayout = new javax.swing.GroupLayout(Product_Sales_Tab);
        Product_Sales_Tab.setLayout(Product_Sales_TabLayout);
        Product_Sales_TabLayout.setHorizontalGroup(
            Product_Sales_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Product_Sales_TabLayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(Product_Sales_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Product_Sales_TabLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(Product_Name_Sales_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SearchSale_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Product_Sales_TabLayout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(18, 18, 18)
                        .addComponent(Product_Amount_Sales_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(RecordSale_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(Product_Sales_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(Product_Sales_TabLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(Product_Sales_ScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        Product_Sales_TabLayout.setVerticalGroup(
            Product_Sales_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Product_Sales_TabLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(Product_Sales_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Product_Name_Sales_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchSale_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 329, Short.MAX_VALUE)
                .addGroup(Product_Sales_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Product_Amount_Sales_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RecordSale_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
            .addGroup(Product_Sales_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(Product_Sales_TabLayout.createSequentialGroup()
                    .addGap(62, 62, 62)
                    .addComponent(Product_Sales_ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(65, Short.MAX_VALUE)))
        );

        Product_Sales_TabLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {RecordSale_Button, SearchSale_Button});

        Records_Tab_Panel.addTab("Sales", Product_Sales_Tab);

        Product_Import_Tab.setBackground(new java.awt.Color(255, 255, 255));

        jLabel21.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel21.setText("Received Amount");

        jLabel16.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel16.setText("Product name");

        Product_Name_Import_TexrField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Product_Name_Import_TexrFieldActionPerformed(evt);
            }
        });

        SearchImport_Button.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        SearchImport_Button.setText("Search");
        SearchImport_Button.setToolTipText("");
        SearchImport_Button.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        SearchImport_Button.setContentAreaFilled(false);
        SearchImport_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchImport_ButtonActionPerformed(evt);
            }
        });

        RecordReceivedAmount_Button.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        RecordReceivedAmount_Button.setText("Record");
        RecordReceivedAmount_Button.setToolTipText("");
        RecordReceivedAmount_Button.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        RecordReceivedAmount_Button.setContentAreaFilled(false);
        RecordReceivedAmount_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecordReceivedAmount_ButtonActionPerformed(evt);
            }
        });

        Received_Amount_Import_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Received_Amount_Import_TextFieldActionPerformed(evt);
            }
        });

        Product_Import_Table.setBackground(new java.awt.Color(51, 51, 51));
        Product_Import_Table.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Product_Import_Table.setForeground(new java.awt.Color(255, 255, 255));
        Product_Import_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Product Name", "Amount (Box)", "Order Date", "Received Date", "Status"
            }
        ));
        Product_Import_Table.setRowHeight(22);
        jScrollPane2.setViewportView(Product_Import_Table);

        javax.swing.GroupLayout Product_Import_TabLayout = new javax.swing.GroupLayout(Product_Import_Tab);
        Product_Import_Tab.setLayout(Product_Import_TabLayout);
        Product_Import_TabLayout.setHorizontalGroup(
            Product_Import_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Product_Import_TabLayout.createSequentialGroup()
                .addGroup(Product_Import_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Product_Import_TabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(Product_Import_TabLayout.createSequentialGroup()
                        .addGroup(Product_Import_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Product_Import_TabLayout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Received_Amount_Import_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(RecordReceivedAmount_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Product_Import_TabLayout.createSequentialGroup()
                                .addGap(99, 99, 99)
                                .addComponent(jLabel16)
                                .addGap(18, 18, 18)
                                .addComponent(Product_Name_Import_TexrField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addComponent(SearchImport_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 60, Short.MAX_VALUE)))
                .addContainerGap())
        );
        Product_Import_TabLayout.setVerticalGroup(
            Product_Import_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Product_Import_TabLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(Product_Import_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Product_Name_Import_TexrField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchImport_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(Product_Import_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Received_Amount_Import_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RecordReceivedAmount_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        Product_Import_TabLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {RecordReceivedAmount_Button, SearchImport_Button});

        Records_Tab_Panel.addTab("Import Product", Product_Import_Tab);

        jLabel22.setBackground(new java.awt.Color(255, 255, 255));
        jLabel22.setFont(new java.awt.Font("Serif", 1, 35)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Records");
        jLabel22.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));

        javax.swing.GroupLayout kGradientPanel4Layout = new javax.swing.GroupLayout(kGradientPanel4);
        kGradientPanel4.setLayout(kGradientPanel4Layout);
        kGradientPanel4Layout.setHorizontalGroup(
            kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 643, Short.MAX_VALUE)
            .addGroup(kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kGradientPanel4Layout.createSequentialGroup()
                    .addGap(254, 254, 254)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(252, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(Records_Tab_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        kGradientPanel4Layout.setVerticalGroup(
            kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 573, Short.MAX_VALUE)
            .addGroup(kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kGradientPanel4Layout.createSequentialGroup()
                    .addGap(15, 15, 15)
                    .addComponent(jLabel22)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(Records_Tab_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(29, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout Records_TabLayout = new javax.swing.GroupLayout(Records_Tab);
        Records_Tab.setLayout(Records_TabLayout);
        Records_TabLayout.setHorizontalGroup(
            Records_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        Records_TabLayout.setVerticalGroup(
            Records_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        Tabbed_Panel.addTab("Add", Records_Tab);

        getContentPane().add(Tabbed_Panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(186, -29, 670, 600));

        kGradientPanel1.setkStartColor(new java.awt.Color(102, 204, 255));

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 180, Short.MAX_VALUE)
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 570, Short.MAX_VALUE)
        );

        getContentPane().add(kGradientPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 570));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void Product_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Product_ButtonActionPerformed
        // TODO add your handling code here:
        Tabbed_Panel.setSelectedIndex(0);
    }//GEN-LAST:event_Product_ButtonActionPerformed

    private void Records_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Records_ButtonActionPerformed
        // TODO add your handling code here:
        Tabbed_Panel.setSelectedIndex(1);
    }//GEN-LAST:event_Records_ButtonActionPerformed

    private void Product_Name_Search_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Product_Name_Search_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Product_Name_Search_TextFieldActionPerformed

    private void SearchProduct_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchProduct_ButtonActionPerformed
        // TODO add your handling code here:
        
        try{
            // get pro name from text field
            String pro_name = Product_Name_Search_TextField.getText();
            List<Stock> stock = null;
            
            // check condition which method to be used
            if(pro_name != null && pro_name.trim().length() > 0){
                stock = stockDAO.getStocksByName(pro_name, branch_name);
            } else {
                stock = stockDAO.getAllStocks(branch_name);
            }
            
            // No result
            if(stock.size() == 0){
                JOptionPane.showMessageDialog(this, "There is no \"" + pro_name + "\" in stock.");
                return;
            }
            
            // create tablemodel
            StockTableModel model = new StockTableModel(stock);
            Product_Search_Table.setModel(model);
            TableColumnModel Product_Search_columnModel = Product_Search_Table.getColumnModel();
            Product_Search_columnModel.getColumn(0).setPreferredWidth(20);
            Product_Search_columnModel.getColumn(1).setPreferredWidth(250);
            Product_Search_columnModel.getColumn(2).setPreferredWidth(20);
            
        } catch(Exception exc){
            JOptionPane.showMessageDialog(this, "Error: " + exc, "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_SearchProduct_ButtonActionPerformed

    private void Product_Amount_Sales_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Product_Amount_Sales_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Product_Amount_Sales_TextFieldActionPerformed

    private void Product_Name_Sales_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Product_Name_Sales_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Product_Name_Sales_TextFieldActionPerformed

    private void SearchSale_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchSale_ButtonActionPerformed
        try{
            // get pro name from text field
            String pro_name = Product_Name_Sales_TextField.getText();
            List<Stock> stock = null;
            
            // check condition which method to be used
            if(pro_name != null && pro_name.trim().length() > 0){
                stock = stockDAO.getStocksByName(pro_name, branch_name);
            } else {
                stock = stockDAO.getAllStocks(branch_name);
            }
            
            // No result
            if(stock.size() == 0){
                JOptionPane.showMessageDialog(this, "There is no \"" + pro_name + "\" in stock.");
                return;
            }
            
            // create tablemodel
            StockTableModel model = new StockTableModel(stock);
            Product_Sales_Table.setModel(model);
            TableColumnModel Product_Sales_columnModel = Product_Sales_Table.getColumnModel();
            Product_Sales_columnModel.getColumn(0).setPreferredWidth(20);
            Product_Sales_columnModel.getColumn(1).setPreferredWidth(250);
            Product_Sales_columnModel.getColumn(2).setPreferredWidth(20);
            
        } catch(Exception exc){
            JOptionPane.showMessageDialog(this, "Error: " + exc, "Error", JOptionPane.ERROR_MESSAGE);
        }
         
    }//GEN-LAST:event_SearchSale_ButtonActionPerformed

    private void RecordSale_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecordSale_ButtonActionPerformed
        try{
            // Get the selected item
            int row = Product_Sales_Table.getSelectedRow();
            int amount;
            
            // Didn't select any item
            if(row < 0){
                JOptionPane.showMessageDialog(this, "Please select a product to record sale.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            // Didn't input the amount
            if(Product_Amount_Sales_TextField.getText() == null || Product_Amount_Sales_TextField.getText().trim().length() == 0){
                JOptionPane.showMessageDialog(this, "Please input sold amount.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            // Get the amount of sold product
            if(isNumeric(Product_Amount_Sales_TextField.getText())){
                amount = Integer.parseInt(Product_Amount_Sales_TextField.getText());
            } else {
                JOptionPane.showMessageDialog(this, "Please input a number.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            // The amount is negative
            if(amount <= 0){
                JOptionPane.showMessageDialog(this, "Amount can't be equal or less than 0.\nPlease input again.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // Prepare to record
            Stock tempStock = (Stock) Product_Sales_Table.getValueAt(row, StockTableModel.OBJECT_COL);
            
            // The sold amount is more than the amount stock have
            if(tempStock.getAmount() < amount){
                JOptionPane.showMessageDialog(this, "Amount of stock can't be more than amount of stock.\nPlease input again.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // Record the sale and reduce the amount in stock
            int pro_id = tempStock.getProId();
            saleDAO.insertSale(pro_id, branch_name, amount);
            amount *= -1;
            stockDAO.updateStock(pro_id, branch_name, amount);
            
            refreshSaleView();
            
        } catch(Exception exc){
            JOptionPane.showMessageDialog(this, "Error: " + exc, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_RecordSale_ButtonActionPerformed

    private void Received_Amount_Import_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Received_Amount_Import_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Received_Amount_Import_TextFieldActionPerformed

    private void Product_Name_Import_TexrFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Product_Name_Import_TexrFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Product_Name_Import_TexrFieldActionPerformed

    private void SearchImport_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchImport_ButtonActionPerformed
        
        try{
            // get pro name from text field
            String pro_name = Product_Name_Import_TexrField.getText();
            List<Orders> orders = null;
            
            // check condition which method to be used
            if(pro_name != null && pro_name.trim().length() > 0){
                orders = orderDAO.getOrdersByProductNameOfBranch(branch_name, pro_name, false);
            } else {
                orders = orderDAO.getAllOrdersOfBranch(branch_name, false);
            }
            
            // No result
            if(orders.size() == 0){
                JOptionPane.showMessageDialog(this, "There is no \"" + pro_name + "\" in order list.");
                return;
            }
            
            // create tablemodel
            EmployeeManagerOrderTableModel model = new EmployeeManagerOrderTableModel(orders);
            Product_Import_Table.setModel(model);
            TableColumnModel Product_Import_columnModel = Product_Import_Table.getColumnModel();
            Product_Import_columnModel.getColumn(0).setPreferredWidth(10);
            Product_Import_columnModel.getColumn(1).setPreferredWidth(80);
            Product_Import_columnModel.getColumn(2).setPreferredWidth(45);
            Product_Import_columnModel.getColumn(3).setPreferredWidth(80);
            Product_Import_columnModel.getColumn(4).setPreferredWidth(80);
            Product_Import_columnModel.getColumn(5).setPreferredWidth(20);
            
        } catch(Exception exc){
            exc.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + exc, "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_SearchImport_ButtonActionPerformed

    private void RecordReceivedAmount_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecordReceivedAmount_ButtonActionPerformed
        try{
            // Get the selected item
            int row = Product_Import_Table.getSelectedRow();
            int amount;
            int response = 0;
            
            // Didn't select any item
            if(row < 0){
                JOptionPane.showMessageDialog(this, "Please select an order.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            // Didn't input the amount
            if(Received_Amount_Import_TextField.getText() == null || Received_Amount_Import_TextField.getText().trim().length() == 0){
                JOptionPane.showMessageDialog(this, "Please input received amount.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            // Get the amount of imported product
            if(isNumeric(Received_Amount_Import_TextField.getText())){
                amount = Integer.parseInt(Received_Amount_Import_TextField.getText());
            } else {
                JOptionPane.showMessageDialog(this, "Please input a number.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // The amount is negative
            if(amount <= 0){
                JOptionPane.showMessageDialog(this, "Amount can't be equal or less than 0.\nPlease input again.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // Prepare to record
            Orders tempOrder = (Orders) Product_Import_Table.getValueAt(row, EmployeeManagerOrderTableModel.OBJECT_COL);
            int order_id = tempOrder.getOrderId();
            String pro_name = tempOrder.getProName();
            int pro_id = orderDAO.getProductId(order_id, pro_name);
            
            // Check before record (The amount received need to be equal to the order's amount)
            if(tempOrder.getAmount() != amount){
                response = JOptionPane.showConfirmDialog(this, "The receieved amount is not equal to the order. Are you sure to record this import?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            }
            
            // Not record
            if(response != JOptionPane.YES_OPTION){
                return;
            }
            
            // Record
            importDAO.insertImport(pro_id, amount, branch_name, order_id);
            orderDAO.updateOrder(tempOrder);
            
            // If the amount receieved equal to the order, the order is completed
            if(tempOrder.getAmount() == amount){
                // There is this product in the branch's stock
                if(stockDAO.isStock(pro_id, branch_name))
                    stockDAO.updateStock(pro_id, branch_name, amount);
                // No product of this name in the branch
                else
                    stockDAO.insertStock(pro_id, amount, branch_name);
                orderDAO.updateOrder(tempOrder);
                JOptionPane.showMessageDialog(this, "Order complete.");
            }
            // If not, received the product but let the manager deal with the incorrect amount
            else JOptionPane.showMessageDialog(this, "Order received.");            
            
            refreshImportView();
            refreshSaleView();
            
        } catch(Exception exc){
            JOptionPane.showMessageDialog(this, "Error: " + exc, "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_RecordReceivedAmount_ButtonActionPerformed

    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
        // Log out from the system
        Login frame = new Login();
        
        setVisible(false);
        frame.setVisible(true);

    }//GEN-LAST:event_LogoutActionPerformed
    
    // Check if the text can be converted to numbers
    public boolean isNumeric(String str){
        try {
            int num = Integer.parseInt(str);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Employee1().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Button_Panel;
    private javax.swing.JButton Logout;
    private javax.swing.JTextField Product_Amount_Sales_TextField;
    private javax.swing.JButton Product_Button;
    private javax.swing.JPanel Product_Import_Tab;
    private javax.swing.JTable Product_Import_Table;
    private javax.swing.JTextField Product_Name_Import_TexrField;
    private javax.swing.JTextField Product_Name_Sales_TextField;
    private javax.swing.JTextField Product_Name_Search_TextField;
    private javax.swing.JScrollPane Product_Sales_ScrollPane;
    private javax.swing.JPanel Product_Sales_Tab;
    private javax.swing.JTable Product_Sales_Table;
    private javax.swing.JTable Product_Search_Table;
    private javax.swing.JTextField Received_Amount_Import_TextField;
    private javax.swing.JButton RecordReceivedAmount_Button;
    private javax.swing.JButton RecordSale_Button;
    private javax.swing.JButton Records_Button;
    private javax.swing.JPanel Records_Tab;
    private javax.swing.JTabbedPane Records_Tab_Panel;
    private javax.swing.JButton SearchImport_Button;
    private javax.swing.JButton SearchProduct_Button;
    private javax.swing.JButton SearchSale_Button;
    private javax.swing.JPanel Search_Tab_Panel;
    private javax.swing.JTabbedPane Tabbed_Panel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private keeptoo.KGradientPanel kGradientPanel1;
    private keeptoo.KGradientPanel kGradientPanel3;
    private keeptoo.KGradientPanel kGradientPanel4;
    // End of variables declaration//GEN-END:variables

    // Refresh the view of stock's table
    private void refreshSaleView() {
        
        try{
            List<Stock> stock = stockDAO.getAllStocks(branch_name);
            
            // create new table model
            StockTableModel model = new StockTableModel(stock);
            
            Product_Sales_Table.setModel(model);
            TableColumnModel Product_Sales_columnModel = Product_Sales_Table.getColumnModel();
            Product_Sales_columnModel.getColumn(0).setPreferredWidth(20);
            Product_Sales_columnModel.getColumn(1).setPreferredWidth(250);
            Product_Sales_columnModel.getColumn(2).setPreferredWidth(20);
            
        } catch(Exception exc){
            JOptionPane.showMessageDialog(this, "Error: " + exc, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    // Refresh the view of import's table
    private void refreshImportView() {
        try{
            List<Orders> Orders = orderDAO.getAllOrdersOfBranch(branch_name, false);
            
            // create new table model
            EmployeeManagerOrderTableModel model = new EmployeeManagerOrderTableModel(Orders);
            
            Product_Import_Table.setModel(model);
            TableColumnModel Product_Import_columnModel = Product_Import_Table.getColumnModel();
            Product_Import_columnModel.getColumn(0).setPreferredWidth(10);
            Product_Import_columnModel.getColumn(1).setPreferredWidth(80);
            Product_Import_columnModel.getColumn(2).setPreferredWidth(45);
            Product_Import_columnModel.getColumn(3).setPreferredWidth(80);
            Product_Import_columnModel.getColumn(4).setPreferredWidth(80);
            Product_Import_columnModel.getColumn(5).setPreferredWidth(20);
            
        } catch(Exception exc){
            JOptionPane.showMessageDialog(this, "Error: " + exc, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    
}
